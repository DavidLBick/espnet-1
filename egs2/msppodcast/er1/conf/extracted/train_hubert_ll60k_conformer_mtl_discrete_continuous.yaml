# network architecture
batch_type: length
batch_bins: 21000
accum_grad: 1
max_epoch: 50
patience: none

frontend: null
log_interval: 1000

preencoder: linear
preencoder_conf:
    input_size: 1024  # Note: If the upstream is changed, please change this value accordingly.
    output_size: 80

encoder: conformer
encoder_conf:
    output_size: 64
    attention_heads: 8
    linear_units: 64
    num_blocks: 4
    dropout_rate: 0.15
    positional_dropout_rate: 0.15
    attention_dropout_rate: 0.15
    input_layer: linear
    normalize_before: true
    macaron_style: true
    pos_enc_layer_type: "rel_pos"
    selfattention_layer_type: "rel_selfattn"
    activation_type: "swish"
    use_cnn_module:  true
    cnn_module_kernel: 31

# decoder related
decoder: mtl_decoder
decoder_conf:
    pool_type: att
    dropout_rate: 0.2
    decoder_style: discrete,continuous
    discrete_pool_style: "joint"
    continuous_pool_style: "independent"
    discrete_continuous_pool_style: "independent"
    continuous_dim_size: 3



write_collected_feats: False

optim: adam
optim_conf:
    lr: 0.001

    #scheduler: reducelronplateau
#scheduler_conf:
#        factor: 0.85
#        mode: max
#        patience: 3

scheduler: warmuplr     # pytorch v1.1.0+ required
scheduler_conf:
    warmup_steps: 15000

model_conf:
    lsm_weight: 0.0
    extract_feats_in_collect_stats: False
    discrete_cts_weight: [ 1.0,1.0]

normalize: null
specaug: null

# criterion
val_scheduler_criterion:
    - valid
    - loss
early_stopping_criterion:
    - valid
    - score
    - max
best_model_criterion:
-   - valid
    - ccc
    - max
-   - valid
    - acc
    - max
-   - valid
    - score
    - max

keep_nbest_models: 10



