# network architecture
# encoder related
batch_type: length
batch_bins: 2000000
## Workhorse 
##batch_bins: 7000
accum_grad: 1
max_epoch: 100
patience: none
log_interval: 1000

frontend: s3prl
frontend_conf:
    frontend_conf:
        upstream: hubert_large_ll60k  # Note: If the upstream is changed, please change the input_size in the preencoder.
    download_dir: ./hub
    multilayer_feature: True

encoder: conformer
encoder_conf:
    output_size: 64
    attention_heads: 8
    linear_units: 64
    num_blocks: 4
    dropout_rate: 0.1
    positional_dropout_rate: 0.1
    attention_dropout_rate: 0.1
    input_layer: linear
    normalize_before: true
    macaron_style: true
    pos_enc_layer_type: "rel_pos"
    selfattention_layer_type: "rel_selfattn"
    activation_type: "swish"
    use_cnn_module:  true
    cnn_module_kernel: 31

# decoder related
decoder: seq_classifier 
decoder_conf:
    pool_type: mean
    # attention_heads: 4
    # attention_dim: 64
    # dropout_rate: 0.1

optim: adam
optim_conf:
    lr: 0.001

scheduler: warmuplr     # pytorch v1.1.0+ required
scheduler_conf:
    warmup_steps: 7000

model_conf:
    ctc_weight: 0.0
    lsm_weight: 0.15
    length_normalized_loss: false
    disable_add_sos_eos: true 

specaug: specaug
specaug_conf:
    apply_time_warp: true
    time_warp_window: 5
    time_warp_mode: bicubic
    apply_freq_mask: true
    freq_mask_width_range:
    - 0
    - 100
    num_freq_mask: 2
    apply_time_mask: true
    time_mask_width_range:
    - 0
    - 40
    num_time_mask: 2

best_model_criterion:
-   - valid
    - acc
    - max
keep_nbest_models: 10
